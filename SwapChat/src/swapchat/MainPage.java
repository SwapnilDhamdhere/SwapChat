/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swapchat;

import java.awt.HeadlessException;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author admin
 */
public class MainPage extends javax.swing.JFrame {
    
    final int SERVER_PORT = 18524;
    Socket socket = null;
    PrintWriter out = null;
    BufferedReader in = null;
    ClientInfoSeirialized info;

    /**
     * Creates new form MainPage
     */
    public MainPage() throws HeadlessException{
        initComponents();
        FilljListOne();
        conDisconOfServer();
        
        
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter(){
            public void windowClosing(WindowEvent e){
                clostSockInOut();
            }
        });
    }
    
    
    private void FilljListOne() {
        DefaultListModel dlm = new DefaultListModel();
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=(Connection) DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","swapchat","swapchat");
            //Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:1521/","swapchat","swapchat");
            java.sql.Statement stmt;
            stmt = con.createStatement();
            ResultSet rs=stmt.executeQuery("select user_name from user_database");
            while(rs.next()){
                String username=rs.getString("user_name");
                dlm.addElement(username);
            }
            jList2.setModel(dlm);
        }catch(ClassNotFoundException | SQLException e){
            System.out.println(e);
        }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        jLabel1.setText("SwapChat");

        jLabel2.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel2.setText(LoginPage.jTextField1.getText());

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jButton1.setText("Online");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList2);

        jButton2.setText("Send");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(66, 66, 66))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        showOnlineClients();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        sendMsg();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        // TODO add your handling code here:
        jTextArea1.setText("");
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=(Connection) DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","swapchat","swapchat");
            //Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:1521/","swapchat","swapchat");
            java.sql.Statement stmt;
            stmt = con.createStatement();
            ResultSet rs=stmt.executeQuery("select sms,date_time,from_user from chat_database where (from_user='"+LoginPage.jTextField1.getText()+"' and to_user='"+jList2.getSelectedValue()+"') or(from_user='"+jList2.getSelectedValue()+"' and to_user='"+LoginPage.jTextField1.getText()+"') order by date_time");
            while(rs.next()){
                String from_sms=rs.getString("from_user");
                String sms=rs.getString("sms");
                String date=rs.getString("date_time");
                jTextArea1.append(from_sms+"\n"+sms+"\n"+date+"\n \n \n");
            }
	}catch(HeadlessException | ClassNotFoundException | SQLException ec){
            System.out.println(ec);
        }
    }//GEN-LAST:event_jList2MouseClicked
    
    private void showOnlineClients() {
        new Thread() {
            @Override
            public void run() {
                try {
                    if (jLabel3.getText().equals("disconnected")) {
                        throw new Exception();
                    }
                    info.showOnline = true;
                    String serializedInfo = SerializeDeserialize.toString(info);
                    out.println(serializedInfo);
                    info.showOnline = false;
                    //FilljListOne();
                } //Error in the serialization procces occured 
                catch (Exception e) {
                    jTextArea1.append("Problem getting online clients list \n");
                }
                //The thread dies
            }
        }.start();
    }
    //in testing
    private void sendMsg(){
        new Thread(){
            @Override
            public void run(){
                try{
                    info.msg = jTextField1.getText();
                    info.recipient = jList2.getSelectedValue();
                    String serializedInfo = SerializeDeserialize.toString(info);
                    out.println(serializedInfo);
                    Class.forName("oracle.jdbc.driver.OracleDriver");
                    Connection con=(Connection) DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","swapchat","swapchat");
                    //Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:1521/","swapchat","swapchat");
                    java.sql.Statement stmt;
                    stmt = con.createStatement();
                    ResultSet rs=stmt.executeQuery("insert into chat_database(date_time, from_user, to_user, sms) values (current_timestamp,'"+LoginPage.jTextField1.getText()+"','"+jList2.getSelectedValue()+"','"+jTextField1.getText()+"')");
                    //insert into chat_database values(GETDATE(),LoginPage.jTextField.getText(),jList2.getSelectedValue(),jTextField1.getText());
                    jTextField1.setText("");
                }catch(IOException | ClassNotFoundException | SQLException e){
                    jTextArea1.append("Problem sending the message. \n" + e);
                }
            }
        }.start();
    }
    
    private void conDisconOfServer(){
        new Thread(){
            @Override
            public void run(){
                try{
                    socket = new Socket("127.0.0.1", SERVER_PORT);
                    out = new PrintWriter(socket.getOutputStream(), true);
                    in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                    info = new ClientInfoSeirialized();
                    info.name = LoginPage.jTextField1.getText();
                    
                    out.println(info.name);
                    jLabel3.setText("Connected");
                    try{
                        String line;
                        while((line = in.readLine()) != null){
                            //JOptionPane.showMessageDialog(null, line);
                            jTextArea1.append(line +" \n" );
                        }
                    }catch(IOException e){
                        if(jLabel3.getText().equals("Connected")){
                            JOptionPane.showMessageDialog(null,"Server disconnected");
                        }
                    }
                    
                }catch(IOException e){
                    jLabel3.setText("disconnected");
                    JOptionPane.showMessageDialog(null,"Couldn't establish a connection with the server");
                }finally{
                    jLabel3.setText("disconnected");
                    clostSockInOut();
                }
            }
        }.start();
    }
    
    
    private void clostSockInOut(){

        if(socket != null){
            try{
                socket.close();
            }catch(IOException ex){
            }
        }
        if(in != null){
            try{
                in.close();
            }catch(IOException ex){
            }
        }
        if(out != null){
            out.close();
        }
        dispose();
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    public static javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
